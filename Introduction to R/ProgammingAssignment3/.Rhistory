set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makevector()
makeVector()
y <- makeVector()
y
y$get
y <- makeVector(c(1,2,3))
y$get
x
y
y$getmean
x = c(1,2,3,4)
x
y = makeVector(x)
y$getmean
y$get
mean = mean(x)
y = makeVector(x)
y$getmean
y$get
y$get(x)
y$set(x)
x
y$get()
y$getmean
y$getmean()
y$setmean()
y$setmean(mean(x))
y$getmean()
get()
makeVector$get()
y$get()
z = [2,3,4,5]
z <- [2,3,4,5]
z <- (2,3,4,5)
z <- [2 3 4 5]
z <- c(2,3,4,5)
makeVector(z)
w <- makeVector(z)
w$get()
w$getmean()
w$setmean()
w$setmean(mean(x))
w$getmean()
w$setmean(mean(z))
w$getmean()
keCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinv <- function(xinv) i <<- xinv
getinv <- function() i
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
## This function computes the inverse of the special "matrix" returned by
## makeCacheMatrix above. If the inverse has already been calculated,
## then the cachesolve should retrieve the inverse from the cache.
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
i <- x$getinv()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinv(i)
i
}
x = matrix(data = 1:9, nrow = 1, ncol = 1)
x
x = matrix(data = 1:9, nrow = 3, ncol = 3)
x
solve(x)
x = matrix(data = 3:12, nrow = 3, ncol = 3)
x = matrix(data = 3:11, nrow = 3, ncol = 3)
x
solve(x)
x = matrix(data = c(2,4,3,8,7,6,4,6,9), nrow = 3, ncol = 3)
x
solve(x)
y <- makeCacheMatrix(x)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinv <- function(xinv) i <<- xinv
getinv <- function() i
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
## This function computes the inverse of the special "matrix" returned by
makeCacheMatrix <- function(x = matrix()) {
y <- makeCacheMatrix(x)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinv <- function(xinv) i <<- xinv
getinv <- function() i
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
y <- makeCacheMatrix(x)
y$get()
y$getinv()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(w)
cacheSolve(x)
cachemean(\)
cachemean(z)
cacheSolve(y)
cacheSolve(y)
rm
rm()
setwd("D:/Academic/Data Science/Coursera/R Introduction/rprog-data-ProgAssignment3-data")
#Read the data
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
ncol(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
View(outcome)
View(outcome)
View(outcome)
validoutcome <- c("heart attack", "heart failure", "pneumonia")
"heart attack" in validoutcome
"heart attack" is.element(validoutcome)
is.element(validoutcome,"heart attack")
is.element("heart attack",validoutcome)
is.element("hart attack",validoutcome)
state.abb
is.element("heart attack",validoutcome)
is.element(validoutcome,"heart attack")
c(11,17,23)*is.element(validoutcome,"heart attack")
sum(c(11,17,23)*is.element(validoutcome,"heart attack"))
outcome <- subset(outcome, data$State == "state"TX"")
outcome <- subset(outcome, data$State == "state TX")
outcome <- subset(outcome, outcome$State == "state"TX"")
outcome <- subset(outcome, outcome$State == TX")
)
outcome <- subset(outcome, outcome$State == TX")
outcome <- subset(outcome, outcome$State == "TX")
outcome[, 17] <- as.numeric(outcome[, 17])
max(outcome[, 17], na.rm=TRUE)
which.max(outcome[, 17], na.rm=TRUE)
which.max(outcome[, 17])
which(x == max(outcome[, 17], na.rm=TRUE))
which(outcome[, 17] == max(outcome[, 17], na.rm=TRUE))
v = c("alpha", "aa", "beta")
min(v)
minval = c(1,3,8)
outcome[minval,2]
minval = c(1,7,12)
outcome[minval,2]
min(outcome[minval,2])
source("best.R")
source("best.R")
source("best.R")
best("TX", "heart attack")
validstate <- state.abb
(is.element(TX,validstate)
)
is.element(TX,validstate)
is.element("TX",validstate)
source("best.R")
best("TX", "heart attack")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
debug(best)
best("TX", "heart attack")
View(data)
exit
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("TX", "pneumonia")
best("TX", "heart attack")
debug(best)
best("TX", "heart failure")
exit
source("best.R")
best("TX", "heart failure")
best("TX", "pneumonia")
best("MD", "pneumonia")
best("BB", "pneumonia")
best("BB", "pneumoni")
best("NY", "pneumoni")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
str(outcome$State)
outcome$Statef = as.factor(outcome$State)
str(outcome$Statef)
str(state.abb)
summary(state.abb)
summary(outcome$Statef)
split1 = split(outcome, outcome$State)
split2 = split(outcome, outcome$Statef)
rm(split2)
rm(split1)
rm(outcome$Statef)
rs(outcome$Statef)
split1 = split(outcome, outcome$State)
is.element(outcome$Statef,validstate)
is.element(outcome$Statef,as.factor(validstate))
summary(outcome$Statef)
summary(validstate)
validstate
sort(validstate)
str(outcome$Statef)
validstate <- c(state.abb,"DC", "GU", "PR", "VI")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state= "TX"
data <- subset(data, data$State == state)
data[, number] <- as.numeric(data[, number])
number=11
data[, number] <- as.numeric(data[, number])
data <- data[c(2,number)]
z = complete.cases(temp)
data = complete.cases(data)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- subset(data, data$State == state)
data[, number] <- as.numeric(data[, number])
data <- data[c(2,number)]
data = data[complete.cases(data),]
View(data)
data <- data[order(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,Hospital.Name)]
data <- data[order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name")]
View(data)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- subset(data, data$State == state)
data[, number] <- as.numeric(data[, number])
data <- data[c(2,number)]
data = data[complete.cases(data),]
data <- data[order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name"),]
View(data)
View(data)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- subset(data, data$State == state)
data[, number] <- as.numeric(data[, number])
data <- data[c(2,number)]
data = data[complete.cases(data),]
data2 <- data[order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name"),]
data2 <- data[order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name")]
data2 <- data[,order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name")]
dd <- transform(data.frame(x, y, z),
z = factor(z, labels = LETTERS[9:1]))
data2 <- data[order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",Hospital.Name)]
data2 <- order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name")
dd <- data.frame(b = factor(c("Hi", "Med", "Hi", "Low"),
levels = c("Low", "Med", "Hi"), ordered = TRUE),
x = c("A", "D", "A", "C"), y = c(8, 3, 9, 9),
z = c(1, 1, 1, 2))
View(dd)
data2 <- data[with(data,order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name"))]
View(data2)
View(data2)
data2 <- data[with(data,order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name")),]
data2 <- data[with(data,order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name"))]
data2 <- data[with(data,order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name"),)]
View(data2)
data2 <- data[order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name"),]
data2 <- data[order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name")]
data2 <- data[, order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name")]
data2 <- data[order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name")]
data2 <- data[order("Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name"),]
data2 <- data[order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name")]
data2 <- data[order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack")]
data2 <- data[order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"),]
data2 <- data["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
View(data2)
data2 <- data["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",]
data2 <- data[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
data2 <- data["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack")
order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Names")
order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.Name")
data2 <- data[with(data,order(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,Hospital.Name)),]
View(data2)
source(rankhospital.R)
setwd("D:/Academic/Data Science/Coursera/R Introduction/rprog-data-ProgAssignment3-data")
setwd("D:/Academic/Data Science/Coursera/R Introduction/rprog-data-ProgAssignment3-data")
source(rankhospital.R)
source("rankhospital.R")
data2 <- sorth("TX",data,17)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data2 <- sorth("TX",data,17)
colnames(data2)
colnames(data2)[1]
data2 <- sorth("TX",data,17)
source("rankhospital.R")
data2 <- sorth("TX",data,17)
colnames(data2)[2]
colnames(data2)[[2]]
colnames(data2)[[1]]
data2[[1]]
data2[1]
data2[2]
data2[0,2]
data2[1,2]
data2[1,]
data2[1]
data2[[1]]
data2[[0]]
data2[[1]]
source("rankhospital.R")
data2 <- sorth("TX",data,17)
label(data2[1])
labels(data2[1])
labels(data2[[1]])
labels(data2[[2]])
labels(data2)
View(data2)
source("rankhospital.R")
data2 <- sorth("TX",data,17)
head(data2)
source("rankhospital.R")
data2 <- sorth("TX",data,17)
source("rankhospital.R")
data2 <- sorth("TX",data,17)
head(data2)
tail(data2)
source("rankhospital.R")
data2 <- sorth("TX",data,17)
head(data2)
data2[1]
data2[1,1]
data2[-1,1]
data2[1,-1]
data2[2,-1]
data2[1,1]
data2[-1,1]
data2[-1,-1]
View(data2)
data2[-1,]
data2[,-1]
data2[[1]]
data2[[1],1]
data2[1][1]
data2[[1]]
data2[[1,1]]
data2[[-1,1]]
data2[[1,-1]]
data2[[1,1]]
data2[[1,2]]
data2[[1,1]]
data2[[0,1]]
data2[[-1,1]]
data2[[9,1]]
data2[[ncol(data2),1]]
data2[[nrow(data2),1]]
summary(dat2)
summary(data2)
data2[[nrow(data2)]]
source("rankhospital.R")
source("rankhospital.R")
source("rankhospital.R")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
submit()
submit()
submit()
submit()
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
validstate <- c(state.abb,"DC", "GU", "PR", "VI")
outcome = "heart attak"
validoutcome <- c("heart attack", "heart failure", "pneumonia")
number = sum(c(11,17,23)*is.element(validoutcome,outcome))
split = split(data, data$State)
sorted <- lapply(split, sorth2, number)
sorth2 <- function(,data,number){
data[, number] <- as.numeric(data[, number])
#Data Frame Column Slice
data <- data[c(2,number)]
#Remove data with NAs
data = data[complete.cases(data),]
#sort
data[order(data[,2], data[,1]), ]
}
sorth2 <- function(data,number){
data[, number] <- as.numeric(data[, number])
#Data Frame Column Slice
data <- data[c(2,number)]
#Remove data with NAs
data = data[complete.cases(data),]
#sort
data[order(data[,2], data[,1]), ]
}
sorted <- lapply(split, sorth2, number)
sorted <- lapply(split, sorth2)
sorted <- lapply(split, sorth2, number=number)
sorted <- sorth2(split[1],number\)
sorted <- sorth2(split[1],number)
sorted <- sorth2(split[1], number)
o
number = sum(c(11,17,23)*is.element(validoutcome,outcome))
outcome = "heart attack"
number = sum(c(11,17,23)*is.element(validoutcome,outcome))
sorted <- lapply(split, sorth2, number=number)
sorted <- sapply(split, sorth2, number=number)
View(sorted)
sorted <- lapply(split, sorth2, number=number)
labels(sorted)
labels(sorted)[1]
sorted[[1,1]]
sorted[[1]]
sorted[1]
sorted[1][1,1]
sorted[1][1,]
sorted[1][1]
sorted[1][1,1]
sorted[[1]]
sorted[[1]][1]
sorted[[1]][1,1]
sorted[[1]][[1,1]]
sorted[[1]][1,1]
sorted[[1]][-1,1]
sorted[[1]][nrow(sorted[1]),1]
sorted[[1]][nrow(sorted[[1]]),1]
sorted[[1]][1,1]
sorted[[1]][[1,1]]
create.df <- function(sorted, num){
x <- character(0)
y <- character(0)
for (i in 1:54) {
x[i] <- labels(sorted)[i]
## Return hospital name in that state with the given rank
if (num =="best") y[i] <-sorted[[1]][1,1]
if (num =="worst") y[i] <-sorted[[1]][nrow(sorted),1]
#If num > number of hospitals in state, then return NA
if (num > nrow(sorted[[1]])) y[i] <- NA
y[i] <- sorted[[i]][num,1]
}
data.frame(state=x, hospital=y, stringsAsFactors=FALSE)
}
rank = create.df(sorted, num)
num = 5
rank = create.df(sorted, num)
View(rank)
View(rank)
source("rankall.R")
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome = 'pneumonia'
validoutcome <- c("heart attack", "heart failure", "pneumonia")
number = sum(c(11,17,23)*is.element(validoutcome,outcome))
split = split(data, data$State)
sorted <- lapply(split, sorth2, number=number)
num = 'worst'
x <- character(0)
y <- character(0)
create.df(sorted, num)
i=1
x[i] <- labels(sorted)[i]
if (num =="best") y[i] <-sorted[[i]][1,1]
if (num =="worst") y[i] <-sorted[[i]][nrow(sorted[[i]]),1]
if (num > nrow(sorted[[i]])) y[i] <- NA
if (num =="worst") y[i] <-sorted[[i]][nrow(sorted[[i]]),1]
if (num =="best") y[i] <-sorted[[i]][1,1] next
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
